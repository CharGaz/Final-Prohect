/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:915552:
  appc.background(230);
} //_CODE_:window1:915552:

public void zoom_Clicked(GButton source, GEvent event) { //_CODE_:zoom:736080:
  scale += scalefactor;

} //_CODE_:zoom:736080:

public void zoomOut_Clicked(GButton source, GEvent event) { //_CODE_:zoomOut:358050:
  if(1 < scale){
    scale -= scalefactor;
  }
  
} //_CODE_:zoomOut:358050:

public void panLeft_Clickled(GButton source, GEvent event) { //_CODE_:panLeft:876359:
  // if( 0 < xPan){
  //   xPan -= 12;
  // }
  xPan -= panfactor;
  
} //_CODE_:panLeft:876359:

public void panRight_Clicked(GButton source, GEvent event) { //_CODE_:panRight:905221:
  // if( xPan >= width){
  //   xPan += 12;
  // }

  xPan += panfactor;
} //_CODE_:panRight:905221:

public void panUp_Clicked(GButton source, GEvent event) { //_CODE_:panUp:619938:
  // if( 0 < yPan){
  //   yPan -= 12;
  // }
  
  yPan -= panfactor;
} //_CODE_:panUp:619938:

public void panDown_Clicked(GButton source, GEvent event) { //_CODE_:panDown:224973:
  // if( yPan >= height){
  //   yPan += 12;
  // }

  yPan += panfactor;
} //_CODE_:panDown:224973:

public void scaleFactor_Change(GSlider source, GEvent event) { //_CODE_:scaleFactor:398326:
  scalefactor = scaleFactor.getValueF();
} //_CODE_:scaleFactor:398326:

public void panFactor_Change(GSlider source, GEvent event) { //_CODE_:panFactor:327259:
  panfactor = panFactor.getValueI();
} //_CODE_:panFactor:327259:





// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Sliders and Such", 0, 0, 300, 400, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  zoom = new GButton(window1, 11, 15, 80, 30);
  zoom.setText("Zoom in");
  zoom.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  zoom.addEventHandler(this, "zoom_Clicked");
  zoomOut = new GButton(window1, 12, 55, 80, 30);
  zoomOut.setText("Zoom out");
  zoomOut.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  zoomOut.addEventHandler(this, "zoomOut_Clicked");
  panLeft = new GButton(window1, 110, 55, 42, 30);
  panLeft.setTextAlign(GAlign.CENTER, GAlign.CENTER);
  panLeft.setText("←");
  panLeft.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  panLeft.addEventHandler(this, "panLeft_Clickled");
  panRight = new GButton(window1, 210, 55, 44, 30);
  panRight.setText("→");
  panRight.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  panRight.addEventHandler(this, "panRight_Clicked");
  panUp = new GButton(window1, 160, 15, 44, 30);
  panUp.setText("↑");
  panUp.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  panUp.addEventHandler(this, "panUp_Clicked");
  panDown = new GButton(window1, 160, 55, 44, 30);
  panDown.setText("↓");
  panDown.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  panDown.addEventHandler(this, "panDown_Clicked");
  scaleFactor = new GSlider(window1, 11, 95, 80, 40, 10.0);
  scaleFactor.setShowValue(true);
  scaleFactor.setLimits(0.1, 0.1, 1.0);
  scaleFactor.setNbrTicks(5);
  scaleFactor.setNumberFormat(G4P.DECIMAL, 2);
  scaleFactor.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  scaleFactor.setOpaque(false);
  scaleFactor.addEventHandler(this, "scaleFactor_Change");
  panFactor = new GSlider(window1, 134, 94, 100, 40, 10.0);
  panFactor.setShowValue(true);
  panFactor.setLimits(10, 10, 20);
  panFactor.setNumberFormat(G4P.INTEGER, 0);
  panFactor.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  panFactor.setOpaque(false);
  panFactor.addEventHandler(this, "panFactor_Change");
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GButton zoom; 
GButton zoomOut; 
GButton panLeft; 
GButton panRight; 
GButton panUp; 
GButton panDown; 
GSlider scaleFactor; 
GSlider panFactor; 
